/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VerifyTier, VerifyTierInterface } from "../VerifyTier";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "verify",
        type: "address",
      },
    ],
    name: "Initialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verify_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    name: "report",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    name: "reportTimeForTier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId_",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b610b23806100ed6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806388d6860414610079578063c4d66de81461009a578063caa0eb3b146100af575b600080fd5b61006461005f366004610806565b6100c2565b60405190151581526020015b60405180910390f35b61008c6100873660046108f6565b61015b565b604051908152602001610070565b6100ad6100a83660046109af565b61032a565b005b61008c6100bd3660046109ca565b6105bc565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f42766d3f00000000000000000000000000000000000000000000000000000000148061015557507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600080546040517f31e658a500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152839262010000900416906331e658a590602401606060405180830381865afa1580156101d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f69190610a68565b600054604080517fb9bd0135000000000000000000000000000000000000000000000000000000008152835163ffffffff90811660048301526020850151811660248301529184015190911660448201524260648201529192506002916201000090910473ffffffffffffffffffffffffffffffffffffffff169063b9bd013590608401602060405180830381865afa158015610297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bb9190610ad4565b1415610301576102f97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60006008846020015163ffffffff16610760565b915050610155565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9392505050565b600054610100900460ff161580801561034a5750600054600160ff909116105b806103645750303b158015610364575060005460ff166001145b6103f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561045357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b73ffffffffffffffffffffffffffffffffffffffff82166104d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f305f41444452455353000000000000000000000000000000000000000000000060448201526064016103ec565b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff8516908102919091179091556040805133815260208101929092527fdc90fed0326ba91706deeac7eb34ac9f8b680734f9d782864dc29704d23bed6a910160405180910390a180156105b857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600080546040517f31e658a500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152839262010000900416906331e658a590602401606060405180830381865afa158015610633573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106579190610a68565b600054604080517fb9bd0135000000000000000000000000000000000000000000000000000000008152835163ffffffff90811660048301526020850151811660248301529184015190911660448201524260648201529192506002916201000090910473ffffffffffffffffffffffffffffffffffffffff169063b9bd013590608401602060405180830381865afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c9190610ad4565b1415610733576020015163ffffffff169050610758565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9150505b949350505050565b60008260088111156107ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f5449455200000000000000000000000000000000000000000000000060448201526064016103ec565b6000855b858110156107fa5763ffffffff6020820290811b199890981685891b179791506001016107d2565b50959695505050505050565b60006020828403121561081857600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461084857600080fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461087357600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156108ee576108ee610878565b604052919050565b6000806040838503121561090957600080fd5b6109128361084f565b915060208084013567ffffffffffffffff8082111561093057600080fd5b818601915086601f83011261094457600080fd5b81358181111561095657610956610878565b8060051b91506109678483016108a7565b818152918301840191848101908984111561098157600080fd5b938501935b8385101561099f57843582529385019390850190610986565b8096505050505050509250929050565b6000602082840312156109c157600080fd5b6108488261084f565b600080600080606085870312156109e057600080fd5b6109e98561084f565b935060208501359250604085013567ffffffffffffffff80821115610a0d57600080fd5b818701915087601f830112610a2157600080fd5b813581811115610a3057600080fd5b8860208260051b8501011115610a4557600080fd5b95989497505060200194505050565b805163ffffffff8116811461087357600080fd5b600060608284031215610a7a57600080fd5b6040516060810181811067ffffffffffffffff82111715610a9d57610a9d610878565b604052610aa983610a54565b8152610ab760208401610a54565b6020820152610ac860408401610a54565b60408201529392505050565b600060208284031215610ae657600080fd5b505191905056fea264697066735822122079f4bfe1a984c53748413132faf71353708f021af36650539764ce7d5caeeee164736f6c634300080a0033";

type VerifyTierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyTierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyTier__factory extends ContractFactory {
  constructor(...args: VerifyTierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VerifyTier> {
    return super.deploy(overrides || {}) as Promise<VerifyTier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VerifyTier {
    return super.attach(address) as VerifyTier;
  }
  connect(signer: Signer): VerifyTier__factory {
    return super.connect(signer) as VerifyTier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyTierInterface {
    return new utils.Interface(_abi) as VerifyTierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyTier {
    return new Contract(address, _abi, signerOrProvider) as VerifyTier;
  }
}
