/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BPoolFeeEscrow,
  BPoolFeeEscrowInterface,
} from "../BPoolFeeEscrow";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "trust",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedFees",
        type: "uint256",
      },
    ],
    name: "ClaimFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "trust",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "redeemable",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Fee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "trust",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "redeemable",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "refundedFees",
        type: "uint256",
      },
    ],
    name: "RefundFees",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeRecipient_",
        type: "address",
      },
      {
        internalType: "address",
        name: "trust_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveAmountIn_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTokenAmountOut_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPrice_",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spotPriceAfter",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "address",
        name: "trust_",
        type: "address",
      },
    ],
    name: "claimFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trust_",
        type: "address",
      },
    ],
    name: "refundFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061163f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632dbfa73514610046578063db2b292c1461006c578063dc9a7ffb1461007f575b600080fd5b610059610054366004611397565b6100a7565b6040519081526020015b60405180910390f35b61005961007a3660046113d0565b61027c565b61009261008d3660046113ed565b610403565b60408051928352602083019190915201610063565b6000806100b383610832565b905060028160028111156100c9576100c9611446565b14610135576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4e4f545f5355434345535300000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff80841660009081526004602090815260408083209388168352929052205480156102745773ffffffffffffffffffffffffffffffffffffffff8416600090815260056020526040812080548392906101a39084906114a4565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600090815260046020908152604080832093891683529290529081208190556101e8856109d6565b6040805133815273ffffffffffffffffffffffffffffffffffffffff898116602083015288811682840152831660608201526080810185905290519192507f4f55a769590f1c0e20a638dce7a4e135e95f8a5ecb2a05e7eef582cce5b5031c919081900360a00190a161027273ffffffffffffffffffffffffffffffffffffffff82168784610b51565b505b949350505050565b60008061028883610832565b9050600181600281111561029e5761029e611446565b14610305576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4e4f545f4641494c000000000000000000000000000000000000000000000000604482015260640161012c565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090205480156103fc5773ffffffffffffffffffffffffffffffffffffffff84166000908152600560205260408120819055610362856109d6565b9050600061036f86610c2a565b6040805133815273ffffffffffffffffffffffffffffffffffffffff898116602083015285811682840152831660608201526080810186905290519192507f2faadd4ce8b8be8c10cd95882652e780929619ab27641da75536750ef256ca5d919081900360a00190a16103f973ffffffffffffffffffffffffffffffffffffffff83168285610b51565b50505b9392505050565b60008060008611610470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f5a45524f5f464545000000000000000000000000000000000000000000000000604482015260640161012c565b600061047b88610832565b600281111561048c5761048c611446565b146104f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f454e444544000000000000000000000000000000000000000000000000000000604482015260640161012c565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600460209081526040808320938c16835292905290812080548892906105379084906114bb565b909155505073ffffffffffffffffffffffffffffffffffffffff8716600090815260056020526040812080548892906105719084906114bb565b9091555060009050610582886109d6565b9050600061058f89610c2a565b9050600061059c8a610da4565b905060008173ffffffffffffffffffffffffffffffffffffffff1663b64ef17b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f91906114d3565b90507f6a7dcbbe66188485e365a408a20221fd766c1bb6989b1f5d6f817c258bc67a29338d8d87878f60405161068d9695949392919073ffffffffffffffffffffffffffffffffffffffff9687168152948616602086015292851660408501529084166060840152909216608082015260a081019190915260c00190565b60405180910390a18173ffffffffffffffffffffffffffffffffffffffff1663e211b8756040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106dd57600080fd5b505af11580156106f1573d6000803e3d6000fd5b5050505061072533308b8d61070691906114bb565b73ffffffffffffffffffffffffffffffffffffffff8816929190610f1e565b61074673ffffffffffffffffffffffffffffffffffffffff8516828b610f82565b6040517f8201aa3f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018b90528481166044830152606482018a9052608482018990526000918291841690638201aa3f9060a40160408051808303816000875af11580156107d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f991906114f0565b909250905061081f73ffffffffffffffffffffffffffffffffffffffff86163384610b51565b909d909c509a5050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604081205460ff168181600281111561086e5761086e611446565b111561087a5792915050565b60008373ffffffffffffffffffffffffffffffffffffffff1663f9020e336040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108eb9190611514565b9050600281600381111561090157610901611446565b141561095c5750505073ffffffffffffffffffffffffffffffffffffffff16600090815260026020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168217905590565b600381600381111561097057610970611446565b14156109cc5750505073ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915590565b5060009392505050565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526020819052604081205490911680610b4b5760008373ffffffffffffffffffffffffffffffffffffffff1663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7691906114d3565b905073ffffffffffffffffffffffffffffffffffffffff8116610af5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f305f524553455256450000000000000000000000000000000000000000000000604482015260640161012c565b73ffffffffffffffffffffffffffffffffffffffff848116600090815260208190526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691831691909117905590505b92915050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610c259084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611104565b505050565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526001602052604081205490911680610b4b5760008373ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cca91906114d3565b905073ffffffffffffffffffffffffffffffffffffffff8116610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f305f544f4b454e00000000000000000000000000000000000000000000000000604482015260640161012c565b73ffffffffffffffffffffffffffffffffffffffff938416600090815260016020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948216949094179093555090919050565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526003602052604081205490911680610b4b5760008373ffffffffffffffffffffffffffffffffffffffff16633fd8108e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4491906114d3565b905073ffffffffffffffffffffffffffffffffffffffff8116610ec3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f305f435250000000000000000000000000000000000000000000000000000000604482015260640161012c565b73ffffffffffffffffffffffffffffffffffffffff938416600090815260036020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948216949094179093555090919050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610f7c9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610ba3565b50505050565b80158061102257506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610ffc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110209190611535565b155b6110ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161012c565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610c259084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401610ba3565b6000611166826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112109092919063ffffffff16565b805190915015610c255780806020019051810190611184919061154e565b610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161012c565b606061027484846000858573ffffffffffffffffffffffffffffffffffffffff85163b611299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161012c565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516112c2919061159c565b60006040518083038185875af1925050503d80600081146112ff576040519150601f19603f3d011682016040523d82523d6000602084013e611304565b606091505b509150915061131482828661131f565b979650505050505050565b6060831561132e5750816103fc565b82511561133e5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012c91906115b8565b73ffffffffffffffffffffffffffffffffffffffff8116811461139457600080fd5b50565b600080604083850312156113aa57600080fd5b82356113b581611372565b915060208301356113c581611372565b809150509250929050565b6000602082840312156113e257600080fd5b81356103fc81611372565b60008060008060008060c0878903121561140657600080fd5b863561141181611372565b9550602087013561142181611372565b95989597505050506040840135936060810135936080820135935060a0909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156114b6576114b6611475565b500390565b600082198211156114ce576114ce611475565b500190565b6000602082840312156114e557600080fd5b81516103fc81611372565b6000806040838503121561150357600080fd5b505080516020909101519092909150565b60006020828403121561152657600080fd5b8151600481106103fc57600080fd5b60006020828403121561154757600080fd5b5051919050565b60006020828403121561156057600080fd5b815180151581146103fc57600080fd5b60005b8381101561158b578181015183820152602001611573565b83811115610f7c5750506000910152565b600082516115ae818460208701611570565b9190910192915050565b60208152600082518060208401526115d7816040850160208701611570565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212204486c45b315c85169579ea37ce2917242fae583cb5c7b6a2574b154a2d6074a964736f6c634300080a0033";

type BPoolFeeEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BPoolFeeEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BPoolFeeEscrow__factory extends ContractFactory {
  constructor(...args: BPoolFeeEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BPoolFeeEscrow> {
    return super.deploy(overrides || {}) as Promise<BPoolFeeEscrow>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BPoolFeeEscrow {
    return super.attach(address) as BPoolFeeEscrow;
  }
  connect(signer: Signer): BPoolFeeEscrow__factory {
    return super.connect(signer) as BPoolFeeEscrow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BPoolFeeEscrowInterface {
    return new utils.Interface(_abi) as BPoolFeeEscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BPoolFeeEscrow {
    return new Contract(address, _abi, signerOrProvider) as BPoolFeeEscrow;
  }
}
