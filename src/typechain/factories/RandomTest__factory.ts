/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RandomTest, RandomTestInterface } from "../RandomTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seed_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n_",
        type: "uint256",
      },
    ],
    name: "microLottery",
    outputs: [
      {
        internalType: "uint256",
        name: "item_",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seed_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
    ],
    name: "randomId",
    outputs: [
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seed_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len_",
        type: "uint256",
      },
    ],
    name: "shuffle",
    outputs: [
      {
        internalType: "bytes",
        name: "shuffled_",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
    ],
    name: "shuffleIdAtIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shuffled",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d1e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806361d4ba9b1161005057806361d4ba9b146100b25780638f1ea97f146100c5578063bffa7fe8146100d857600080fd5b80631715b9ee1461006c57806329fa6d0214610092575b600080fd5b61007f61007a366004610a22565b61011d565b6040519081526020015b60405180910390f35b6100a56100a0366004610a4e565b610132565b6040516100899190610ae6565b61007f6100c0366004610a4e565b61025e565b61007f6100d3366004610af9565b610305565b6000546100f89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610089565b600061012a848484610429565b949350505050565b606060005a905061014384846105e6565b915060005a90506101aa6040518060400160405280601a81526020017f73687566666c652067617320757365643a2025732025732025730000000000008152508583856101909190610b41565b8761019b8688610b41565b6101a59190610b58565b6106e0565b6101b8565b60405180910390fd5b5a91506101c48361077b565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790555a90506102566040518060400160405280601481526020017f73746f726167652067617320757365643a20257300000000000000000000000081525082846102519190610b41565b610806565b505092915050565b60026001556000805a905061027d848460009182526020526040902090565b915060005a90506102c36040518060400160405280600d81526020017f72616e646f6d2069643a2025730000000000000000000000000000000000000081525084610806565b60408051808201909152600e81527f72616e646f6d206761733a2025730000000000000000000000000000000000006020820152610256906102518385610b41565b600180556000805a60005490915073ffffffffffffffffffffffffffffffffffffffff16610333818561089b565b925060005a90506103796040518060400160405280600e81526020017f73687566666c652069643a20257300000000000000000000000000000000000081525085610806565b60408051808201909152601581527f73687566666c6520696e646578206761733a202573000000000000000000000060208201526103bb906102518386610b41565b60006103c8866001610b93565b90505a93506103d7838261089b565b505a91506104206040518060400160405280601781526020017f73687566666c6520696e6465782067617320323a20257300000000000000000081525083866102519190610b41565b50505050919050565b6000828210610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f4d41585f4e00000000000000000000000000000000000000000000000000000060448201526064016101af565b60ff8311156104ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f4d41585f4d41580000000000000000000000000000000000000000000000000060448201526064016101af565b60008367ffffffffffffffff81111561051a5761051a610bab565b6040519080825280601f01601f191660200182016040528015610544576020820181803683370190505b509050610561565b8082015160ff168061055b5750815b92915050565b846000526020810160018201600186035b858111156105bf57610584818361054c565b60206000908120908190526001830190068401537fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610572565b5060206000908120908190526105db906001870190068261054c565b979650505050505050565b60608160020267ffffffffffffffff81111561060457610604610bab565b6040519080825280601f01601f19166020018201604052801561062e576020820181803683370190505b50905082600052600281017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000061ffff600185035b80156106d65760028102840180518381168061067b5750825b602060002080600052600185018106905060028102880180518781168061069f5750825b948916909417909452509085161790527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610662565b5050505092915050565b610775848484846040516024016106fa9493929190610bda565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f08ee5666000000000000000000000000000000000000000000000000000000001790526108c5565b50505050565b6000806107a6836040516020016107929190610c09565b6040516020818303038152906040526108e6565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff8216610800576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b610897828260405160240161081c929190610c2f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d0000000000000000000000000000000000000000000000000000000001790526108c5565b5050565b60008082600202905060006108b4858384600201610912565b6002015161ffff1695945050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60608151826040516020016108fc929190610c51565b6040516020818303038152906040529050919050565b606061012a84610923856001610b93565b61092e856001610b93565b61093a565b9392505050565b6060833b80610959575050604080516020810190915260008152610933565b80841115610977575050604080516020810190915260008152610933565b838310156109c2576040517f2c4a89fa0000000000000000000000000000000000000000000000000000000081526004810182905260248101859052604481018490526064016101af565b83830384820360008282106109d757826109d9565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050509392505050565b600080600060608486031215610a3757600080fd5b505081359360208301359350604090920135919050565b60008060408385031215610a6157600080fd5b50508035926020909101359150565b60005b83811015610a8b578181015183820152602001610a73565b838111156107755750506000910152565b60008151808452610ab4816020860160208601610a70565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006109336020830184610a9c565b600060208284031215610b0b57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610b5357610b53610b12565b500390565b600082610b8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008219821115610ba657610ba6610b12565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b608081526000610bed6080830187610a9c565b6020830195909552506040810192909252606090910152919050565b6000815260008251610c22816001850160208701610a70565b9190910160010192915050565b604081526000610c426040830185610a9c565b90508260208301529392505050565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f30000000000000000000000000000000000000000000000600582015260008251610cda81600e850160208701610a70565b91909101600e01939250505056fea2646970667358221220d9d210a39ffb04403e87db3d26c02898ac4dcfdee4d08cafa650d02bf29bd71c64736f6c634300080a0033";

type RandomTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomTest__factory extends ContractFactory {
  constructor(...args: RandomTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RandomTest> {
    return super.deploy(overrides || {}) as Promise<RandomTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RandomTest {
    return super.attach(address) as RandomTest;
  }
  connect(signer: Signer): RandomTest__factory {
    return super.connect(signer) as RandomTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomTestInterface {
    return new utils.Interface(_abi) as RandomTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomTest {
    return new Contract(address, _abi, signerOrProvider) as RandomTest;
  }
}
