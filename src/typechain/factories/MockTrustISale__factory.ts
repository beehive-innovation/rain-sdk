/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockTrustISale,
  MockTrustISaleInterface,
} from "../MockTrustISale";

const _abi = [
  {
    inputs: [],
    name: "_crp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_reserve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_saleStatus",
    outputs: [
      {
        internalType: "enum SaleStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "crp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleStatus",
    outputs: [
      {
        internalType: "enum SaleStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crp_",
        type: "address",
      },
    ],
    name: "setCrp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reserve_",
        type: "address",
      },
    ],
    name: "setReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SaleStatus",
        name: "saleStatus_",
        type: "uint8",
      },
    ],
    name: "setSaleStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061047f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063b451eb0b11610081578063ecd0c0c31161005b578063ecd0c0c3146102c1578063f9020e33146102e1578063fc0c546a1461030457600080fd5b8063b451eb0b1461021c578063cd3293de14610271578063cf5200241461028f57600080fd5b80634429f047116100b25780634429f047146101945780634891ad88146101b45780639cecc80a146101c757600080fd5b8063144fa6d7146100d95780633fd8108e14610130578063413ab4a814610174575b600080fd5b61012e6100e736600461037b565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b005b60025473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b60005461014a9073ffffffffffffffffffffffffffffffffffffffff1681565b60025461014a9073ffffffffffffffffffffffffffffffffffffffff1681565b61012e6101c23660046103b8565b610322565b61012e6101d536600461037b565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61012e61022a36600461037b565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1661014a565b6000546102b49074010000000000000000000000000000000000000000900460ff1681565b60405161016b9190610408565b60015461014a9073ffffffffffffffffffffffffffffffffffffffff1681565b60005474010000000000000000000000000000000000000000900460ff166102b4565b60015473ffffffffffffffffffffffffffffffffffffffff1661014a565b600080548291907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000836003811115610373576103736103d9565b021790555050565b60006020828403121561038d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146103b157600080fd5b9392505050565b6000602082840312156103ca57600080fd5b8135600481106103b157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160048310610443577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9190529056fea26469706673582212206386d3e52b82a53a9f08c16c9ff5af84d49791f4957c3c8f232e1262b293023e64736f6c634300080a0033";

type MockTrustISaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTrustISaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTrustISale__factory extends ContractFactory {
  constructor(...args: MockTrustISaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockTrustISale> {
    return super.deploy(overrides || {}) as Promise<MockTrustISale>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockTrustISale {
    return super.attach(address) as MockTrustISale;
  }
  connect(signer: Signer): MockTrustISale__factory {
    return super.connect(signer) as MockTrustISale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTrustISaleInterface {
    return new utils.Interface(_abi) as MockTrustISaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockTrustISale {
    return new Contract(address, _abi, signerOrProvider) as MockTrustISale;
  }
}
