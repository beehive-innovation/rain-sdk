/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721BalanceTierFactory,
  ERC721BalanceTierFactoryInterface,
} from "../ERC721BalanceTierFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Implementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "child",
        type: "address",
      },
    ],
    name: "NewChild",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "createChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC721",
            name: "erc721",
            type: "address",
          },
          {
            internalType: "uint256[8]",
            name: "tierValues",
            type: "uint256[8]",
          },
        ],
        internalType: "struct ERC721BalanceTierConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    name: "createChildTyped",
    outputs: [
      {
        internalType: "contract ERC721BalanceTier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maybeChild_",
        type: "address",
      },
    ],
    name: "isChild",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016000908155604051610024906100aa565b604051809103906000f080158015610040573d6000803e3d6000fd5b50604080513381526001600160a01b03831660208201529192507f7fac34ecf0b1b374cd9659e3d17db602659d53f1162b1f20142e6c02694aed70910160405180910390a1600280546001600160a01b0319166001600160a01b03929092169190911790556100b7565b610dc88061086b83390190565b6107a5806100c66000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632ea72a4914610046578063ab43ea1f14610083578063fc91a89714610096575b600080fd5b6100596100543660046104d9565b6100df565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100596100913660046105c9565b61028d565b6100cf6100a4366004610667565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b604051901515815260200161007a565b600060026000541415610153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260009081556101648484610330565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205490915060ff16156101f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4455504c49434154455f4348494c440000000000000000000000000000000000604482015260640161014a565b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602081815260409283902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169092179091558151338152908101929092527f7da70c4e5387d7038610b79ca7d304caaef815826e51e67cf247135387a79bce910160405180910390a160016000559392505050565b60003073ffffffffffffffffffffffffffffffffffffffff16632ea72a49836040516020016102bc919061068b565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016102e791906106df565b6020604051808303816000875af1158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a9190610752565b92915050565b60008061033f838501856105c9565b6002549091506000906103679073ffffffffffffffffffffffffffffffffffffffff166103f7565b6040517fa61e331500000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff82169063a61e3315906103bc90859060040161068b565b600060405180830381600087803b1580156103d657600080fd5b505af11580156103ea573d6000803e3d6000fd5b5092979650505050505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff81166104d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640161014a565b919050565b600080602083850312156104ec57600080fd5b823567ffffffffffffffff8082111561050457600080fd5b818501915085601f83011261051857600080fd5b81358181111561052757600080fd5b86602082850101111561053957600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561059e5761059e61054b565b60405290565b73ffffffffffffffffffffffffffffffffffffffff811681146105c657600080fd5b50565b60006101208083850312156105dd57600080fd5b6040516040810181811067ffffffffffffffff821117156106005761060061054b565b604052833561060e816105a4565b81526020603f8501861361062157600080fd5b61062961057a565b92850192808785111561063b57600080fd5b8287015b85811015610656578035835291830191830161063f565b509183019190915250949350505050565b60006020828403121561067957600080fd5b8135610684816105a4565b9392505050565b815173ffffffffffffffffffffffffffffffffffffffff1681526020808301516101208301919081840160005b60088110156106d5578251825291830191908301906001016106b8565b5050505092915050565b600060208083528351808285015260005b8181101561070c578581018301518582016040015282016106f0565b8181111561071e576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60006020828403121561076457600080fd5b8151610684816105a456fea2646970667358221220c5a4ccdf77fa65df68f90db677101fa238b184d56c25f0ae8fda7eec7f5b207c64736f6c634300080a0033608060405234801561001057600080fd5b50610da8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063a61e331511610050578063a61e33151461009f578063bca6ce64146100b2578063e053ea31146100f757600080fd5b806370230b391461006c5780638a200fff1461008a575b600080fd5b610074610118565b604051610081919061096d565b60405180910390f35b61009d6100983660046109c4565b61015a565b005b61009d6100ad366004610aa6565b6101c1565b6001546100d29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610081565b61010a610105366004610b44565b610443565b604051908152602001610081565b61012061094e565b6000546101429073ffffffffffffffffffffffffffffffffffffffff166104f9565b8060200190518101906101559190610b61565b905090565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f5345545f5449455200000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000547501000000000000000000000000000000000000000000900460ff161580801561020c575060005460017401000000000000000000000000000000000000000090910460ff16105b8061023e5750303b15801561023e575060005474010000000000000000000000000000000000000000900460ff166001145b6102ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016101b8565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055801561035057600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1675010000000000000000000000000000000000000000001790555b61035d8260200151610527565b8151600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691821790556040805133815260208101929092527fdc90fed0326ba91706deeac7eb34ac9f8b680734f9d782864dc29704d23bed6a910160405180910390a1801561043f57600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60006104f360006104ee610455610118565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152909116906370a0823190602401602060405180830381865afa1580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190610bc2565b6106c0565b61070e565b92915050565b60606104f38260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6107ae565b60005473ffffffffffffffffffffffffffffffffffffffff161561054d5761054d610bdb565b6000805b60088110156105fb578183826008811061056d5761056d610c0a565b602002015110156105da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f55545f4f465f4f524445525f544945525f56414c554553000000000000000060448201526064016101b8565b8281600881106105ec576105ec610c0a565b60200201519150600101610551565b5050600061062782604051602001610613919061096d565b604051602081830303815290604052610897565b6040805133815273ffffffffffffffffffffffffffffffffffffffff831660208201529192507f18ebb958e85030233374c8eb79c1a72ee418770db7fb47a7de05d30c868ec958910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b6000805b6008811015610704578381600881106106df576106df610c0a565b60200201518310156106f25790506104f3565b806106fc81610c39565b9150506106c4565b5060089392505050565b600081600881111561077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f5449455200000000000000000000000000000000000000000000000060448201526064016101b8565b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60209190910290811c901b1790565b6060833b806107cd575050604080516020810190915260008152610890565b808411156107eb575050604080516020810190915260008152610890565b83831015610836576040517f2c4a89fa0000000000000000000000000000000000000000000000000000000081526004810182905260248101859052604481018490526064016101b8565b838303848203600082821061084b578261084d565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050505b9392505050565b6000806108c2836040516020016108ae9190610cd4565b604051602081830303815290604052610922565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff821661091c576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b6060815182604051602001610938929190610ce7565b6040516020818303038152906040529050919050565b6040518061010001604052806008906020820280368337509192915050565b6101008101818360005b6008811015610996578151835260209283019290910190600101610977565b50505092915050565b73ffffffffffffffffffffffffffffffffffffffff811681146109c157600080fd5b50565b600080600080606085870312156109da57600080fd5b84356109e58161099f565b935060208501359250604085013567ffffffffffffffff80821115610a0957600080fd5b818701915087601f830112610a1d57600080fd5b813581811115610a2c57600080fd5b886020828501011115610a3e57600080fd5b95989497505060200194505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610aa057610aa0610a4d565b60405290565b6000610120808385031215610aba57600080fd5b6040516040810181811067ffffffffffffffff82111715610add57610add610a4d565b6040528335610aeb8161099f565b81526020603f85018613610afe57600080fd5b610b06610a7c565b928501928087851115610b1857600080fd5b8287015b85811015610b335780358352918301918301610b1c565b509183019190915250949350505050565b600060208284031215610b5657600080fd5b81356108908161099f565b6000610100808385031215610b7557600080fd5b83601f840112610b8457600080fd5b610b8c610a7c565b908301908085831115610b9e57600080fd5b845b83811015610bb8578051835260209283019201610ba0565b5095945050505050565b600060208284031215610bd457600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c92577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000815160005b81811015610cba5760208185018101518683015201610ca0565b81811115610cc9576000828601525b509290920192915050565b6000815260006108906001830184610c99565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f3000000000000000000000000000000000000000000000060058201526000610d6a600e830184610c99565b94935050505056fea2646970667358221220eeefaa5c2547221eeee1584a5538ec1f3bbb0b9950d67b819c4d1329f61ba3de64736f6c634300080a0033";

type ERC721BalanceTierFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BalanceTierFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721BalanceTierFactory__factory extends ContractFactory {
  constructor(...args: ERC721BalanceTierFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721BalanceTierFactory> {
    return super.deploy(overrides || {}) as Promise<ERC721BalanceTierFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721BalanceTierFactory {
    return super.attach(address) as ERC721BalanceTierFactory;
  }
  connect(signer: Signer): ERC721BalanceTierFactory__factory {
    return super.connect(signer) as ERC721BalanceTierFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BalanceTierFactoryInterface {
    return new utils.Interface(_abi) as ERC721BalanceTierFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721BalanceTierFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721BalanceTierFactory;
  }
}
