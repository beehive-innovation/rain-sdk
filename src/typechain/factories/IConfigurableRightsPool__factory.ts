/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IConfigurableRightsPool,
  IConfigurableRightsPoolInterface,
} from "../IConfigurableRightsPool";

const _abi = [
  {
    inputs: [],
    name: "bFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumWeightChangeBlockPeriodParam",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "addTokenTimeLockInBlocksParam",
        type: "uint256",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "minAmountsOut",
        type: "uint256[]",
      },
    ],
    name: "exitPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pokeWeights",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "newWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "updateWeightsGradually",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IConfigurableRightsPool__factory {
  static readonly abi = _abi;
  static createInterface(): IConfigurableRightsPoolInterface {
    return new utils.Interface(_abi) as IConfigurableRightsPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IConfigurableRightsPool {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IConfigurableRightsPool;
  }
}
