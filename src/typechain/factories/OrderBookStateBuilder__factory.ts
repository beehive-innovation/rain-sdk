/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OrderBookStateBuilder,
  OrderBookStateBuilderInterface,
} from "../OrderBookStateBuilder";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vm_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
        ],
        internalType: "struct StateConfig",
        name: "config_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "entrypoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minFinalStackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stackLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "argumentsLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "storageLength",
            type: "uint256",
          },
        ],
        internalType: "struct Bounds[]",
        name: "boundss_",
        type: "tuple[]",
      },
    ],
    name: "buildState",
    outputs: [
      {
        internalType: "bytes",
        name: "state_",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "stackPops_",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "stackPushes_",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
        ],
        internalType: "struct StateConfig",
        name: "stateConfig_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "entrypoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minFinalStackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stackLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "argumentsLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "storageLength",
            type: "uint256",
          },
        ],
        internalType: "struct Bounds",
        name: "bounds_",
        type: "tuple",
      },
    ],
    name: "ensureIntegrity",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stackPops",
    outputs: [
      {
        internalType: "uint256[]",
        name: "pops_",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "stackPushes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "pushes_",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e4b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630d5236cd14610051578063661b810d1461006f578063aa9628a114610077578063ce19c93514610097575b600080fd5b6100596100ac565b604051610066919061163f565b60405180910390f35b6100596100c3565b61008a610085366004611997565b6100d5565b6040516100669190611ab5565b6100aa6100a5366004611b06565b6103b0565b005b60606100be6100b96107b8565b610823565b905090565b60606100be6100d06109f4565b610a4f565b606060006100e285610c21565b905060006100f38260200151610f86565b905060008060006101026100c3565b9050600061010e6100ac565b905060005b88518110156101d857866000015161ffff1689828151811061013757610137611ba1565b602002602001015160a001818152505061016c83838c8c858151811061015f5761015f611ba1565b60200260200101516103b0565b61019c89828151811061018157610181611ba1565b60200260200101516080015186610fba90919063ffffffff16565b94506101ce8982815181106101b3576101b3611ba1565b60200260200101516060015185610fba90919063ffffffff16565b9350600101610113565b506000848a60200151510167ffffffffffffffff8111156101fb576101fb611683565b604051908082528060200260200182016040528015610224578160200160208202803683370190505b50905060005b8a602001515181101561027a578a60200151818151811061024d5761024d611ba1565b602002602001015182828151811061026757610267611ba1565b602090810291909101015260010161022a565b5089515160009067ffffffffffffffff81111561029957610299611683565b6040519080825280602002602001820160405280156102cc57816020015b60608152602001906001900390816102b75790505b50905060005b8b515181101561032857610303888d6000015183815181106102f6576102f6611ba1565b6020026020010151610fd3565b82828151811061031557610315611ba1565b60209081029190910101526001016102d2565b506103a06040518060a00160405280600081526020018767ffffffffffffffff81111561035757610357611683565b604051908082528060200260200182016040528015610380578160200160208202803683370190505b5081526020018381526020018481526020018d6020015151815250611163565b9c9b505050505050505050505050565b80518251518110610422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d494e5f534f555243455300000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000808060008060208602602001885101519050805193505b838510156106cb576002850194508481015180601e1a935080601f1a925050600683101561060c57826104ec5787602001515187608001510182106104dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4f4f425f434f4e5354414e5400000000000000000000000000000000000000006044820152606401610419565b60408701805160010190526106ae565b600183141561056257866040015182106104dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4f4f425f535441434b00000000000000000000000000000000000000000000006044820152606401610419565b600283141561057b5760408701805160010190526106ae565b60038314156105f1578660a0015182106104dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4f4f425f53544f524147450000000000000000000000000000000000000000006044820152606401610419565b6004831415610607576106078a8a8a8a866112a0565b6106ae565b60008a848151811061062057610620611ba1565b60200260200101519050600581111561064557806106418463ffffffff8316565b9150505b60408801805182900390819052606089015161066091610fba565b606089015289516000908b908690811061067c5761067c611ba1565b6020026020010151905060058111156106a1578061069d8563ffffffff8316565b9150505b6040890180519091019052505b604087015160608801516106c191610fba565b606088015261043b565b606087015160ff101561073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4d41585f535441434b00000000000000000000000000000000000000000000006044820152606401610419565b8660200151876040015110156107ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f46494e414c5f535441434b5f494e4445580000000000000000000000000000006044820152606401610419565b50505050505050505050565b604080516002808252606080830184529260009291906020830190803683370190505090506001816000815181106107f2576107f2611ba1565b60200260200101818152505060018160018151811061081357610813611ba1565b6020908102919091010152919050565b60606000825190506000604051806105e00160405280836028600601018152602001600181526020016001815260200160018152602001600181526020016000815260200160018152602001600181526020016001815260200160018152602001600181526020016001815260200160018152602001600181526020016108a961134390565b81526020016001815260200160018152602001600181526020016001815260200160018152602001600181526020016001815260200160018152602001600181526020016001815260200160018152602001600181526020016001815260200160018152602001600181526020016001815260200160018152602001600181526020016001815260200160018152602001600181526020016001815260200160018152602001600181526020016001815260200160018152602001600181526020016001815260200160018152602001600181526020016001815260200160018152509050604051602083020160405280925060005b828110156109ec578481815181106109b9576109b9611ba1565b60200260200101518460286006018301815181106109d9576109d9611ba1565b602090810291909101015260010161099f565b505050919050565b60408051600280825260608083018452926000929190602083019080368337019050509050600181600081518110610a2e57610a2e611ba1565b60200260200101818152505060028160018151811061081357610813611ba1565b8051606090600061134390506000604051806105e0016040528084602860060101815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160028152602001600181526020016003815260200160028152602001600281526020016002815260200160038152602001610ad96113b290565b81526020016000815260200160008152602001600081526020016000815260200160018152602001600281526020016002815260200160018152602001600181526020018381526020016003815260200160028152602001838152602001600281526020016001815260200160028152602001838152602001838152602001838152602001838152602001838152602001838152602001838152602001838152602001838152602001838152602001838152602001610b9761142790565b815260200161142d815260026020820152604001611433815260200160028152509050604051602084020160405280935060005b83811015610c1857858181518110610be557610be5611ba1565b6020026020010151856028600601830181518110610c0557610c05611ba1565b6020908102919091010152600101610bcb565b50505050919050565b6040805180820182526000808252602091820181905273ffffffffffffffffffffffffffffffffffffffff84811682528183529083902083518085019094525461ffff8116845262010000900416908201819052610f815760008273ffffffffffffffffffffffffffffffffffffffff163b11610cfa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f305f53495a455f564d00000000000000000000000000000000000000000000006044820152606401610419565b60008273ffffffffffffffffffffffffffffffffffffffff1663ea7cb3706040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d47573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d8d9190810190611bd0565b905060008373ffffffffffffffffffffffffffffffffffffffff1663e0419ae36040518163ffffffff1660e01b81526004016040805180830381865afa158015610ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dff9190611c47565b905061ffff801681602001511115610e73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4f425f53544f524147455f4f50434f444553000000000000000000000000006044820152606401610419565b6002825181610e8457610e84611c96565b0615610eec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f494e56414c49445f504f494e54455253000000000000000000000000000000006044820152606401610419565b6040518060400160405280826020015161ffff168152602001610f0e846114a0565b73ffffffffffffffffffffffffffffffffffffffff908116909152858116600090815260208181526040909120835181549285015190931662010000027fffffffffffffffffffff0000000000000000000000000000000000000000000090921661ffff90931692909217179055925050505b919050565b6060610fb48260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61152b565b92915050565b600081831015610fca5781610fcc565b825b9392505050565b805182516060919060011615611045576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4f44445f5041434b45445f5054525300000000000000000000000000000000006044820152606401610419565b60028106156110b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4f44445f534f555243455f4c454e4754480000000000000000000000000000006044820152606401610419565b60006002600383020467ffffffffffffffff8111156110d1576110d1611683565b6040519080825280601f01601f1916602001820160405280156110fb576020820181803683370190505b50905060056002808701908681019085880101600385015b8183101561115557825180601e1a868111156111345760020285015161ffff165b81601f1a8160081b1783511783525050600283019250600381019050611113565b509398975050505050505050565b606060008260600151905060006018846040015151901b60108560800151901b6008866020015151901b866060015151171717905060008160001b836040516020016111af9190611cc5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526111eb9291602001611cfb565b604051602081830303815290604052905060005b85604001515181101561129757818660400151828151811061122357611223611ba1565b60200260200101515160001b8760400151838151811061124557611245611ba1565b602002602001015160405160200161125f93929190611d21565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905291506001016111ff565b50949350505050565b6040820180517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600584901c91829003019182905260608401516001909101916112ea9190610fba565b606084015260808301516112fe9082610fba565b60808401528251600783168085526001600385811c161b919060005b838110156113365761132e8a8a8a8a6103b0565b60010161131a565b5050909352505050505050565b60008082116113ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f305f4f504552414e445f4e5a4f4e0000000000000000000000000000000000006044820152606401610419565b5090565b600080821161141d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f305f4f504552414e445f455243313135350000000000000000000000000000006044820152606401610419565b5060020260010190565b60020190565b60030190565b6000601f821680610fb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4241445f4f504552414e440000000000000000000000000000000000000000006044820152606401610419565b6000806114cb836040516020016114b79190611d58565b604051602081830303815290604052611613565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff8216611525576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b6060833b8061154a575050604080516020810190915260008152610fcc565b80841115611568575050604080516020810190915260008152610fcc565b838310156115b3576040517f2c4a89fa000000000000000000000000000000000000000000000000000000008152600481018290526024810185905260448101849052606401610419565b83830384820360008282106115c857826115ca565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050509392505050565b6060815182604051602001611629929190611d7e565b6040516020818303038152906040529050919050565b6020808252825182820181905260009190848201906040850190845b818110156116775783518352928401929184019160010161165b565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156116d5576116d5611683565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561172257611722611683565b604052919050565b600067ffffffffffffffff82111561174457611744611683565b5060051b60200190565b600067ffffffffffffffff82111561176857611768611683565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126117a557600080fd5b813560206117ba6117b58361172a565b6116db565b82815260059290921b840181019181810190868411156117d957600080fd5b8286015b848110156117f457803583529183019183016117dd565b509695505050505050565b6000604080838503121561181257600080fd5b61181a6116b2565b9150823567ffffffffffffffff8082111561183457600080fd5b818501915085601f83011261184857600080fd5b813560206118586117b58361172a565b82815260059290921b8401810191818101908984111561187757600080fd5b8286015b848110156118eb578035868111156118935760008081fd5b8701603f81018c136118a55760008081fd5b848101356118b56117b58261174e565b8181528d8b8385010111156118ca5760008081fd5b818b840188830137600091810187019190915284525091830191830161187b565b508752508681013594508285111561190257600080fd5b61190e88868901611794565b81870152505050505092915050565b600060c0828403121561192f57600080fd5b60405160c0810181811067ffffffffffffffff8211171561195257611952611683565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201525092915050565b6000806000606084860312156119ac57600080fd5b833573ffffffffffffffffffffffffffffffffffffffff811681146119d057600080fd5b925060208481013567ffffffffffffffff808211156119ee57600080fd5b6119fa888389016117ff565b94506040870135915080821115611a1057600080fd5b508501601f81018713611a2257600080fd5b8035611a306117b58261172a565b81815260c0918202830184019184820191908a841115611a4f57600080fd5b938501935b83851015611a7557611a668b8661191d565b83529384019391850191611a54565b5080955050505050509250925092565b60005b83811015611aa0578181015183820152602001611a88565b83811115611aaf576000848401525b50505050565b6020815260008251806020840152611ad4816040850160208701611a85565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000806000806101208587031215611b1d57600080fd5b843567ffffffffffffffff80821115611b3557600080fd5b611b4188838901611794565b95506020870135915080821115611b5757600080fd5b611b6388838901611794565b94506040870135915080821115611b7957600080fd5b50611b86878288016117ff565b925050611b96866060870161191d565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611be257600080fd5b815167ffffffffffffffff811115611bf957600080fd5b8201601f81018413611c0a57600080fd5b8051611c186117b58261174e565b818152856020838501011115611c2d57600080fd5b611c3e826020830160208601611a85565b95945050505050565b600060408284031215611c5957600080fd5b6040516040810181811067ffffffffffffffff82111715611c7c57611c7c611683565b604052825181526020928301519281019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b815160009082906020808601845b83811015611cef57815185529382019390820190600101611cd3565b50929695505050505050565b82815260008251611d13816020850160208701611a85565b919091016020019392505050565b60008451611d33818460208901611a85565b82018481528351611d4b816020808501908801611a85565b0160200195945050505050565b6000815260008251611d71816001850160208701611a85565b9190910160010192915050565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f30000000000000000000000000000000000000000000000600582015260008251611e0781600e850160208701611a85565b91909101600e01939250505056fea264697066735822122049fbfc6ef96706b4fe3a9618b02581a34b2f4f93c41eb253734cb1fc970580e064736f6c634300080a0033";

type OrderBookStateBuilderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderBookStateBuilderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderBookStateBuilder__factory extends ContractFactory {
  constructor(...args: OrderBookStateBuilderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrderBookStateBuilder> {
    return super.deploy(overrides || {}) as Promise<OrderBookStateBuilder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrderBookStateBuilder {
    return super.attach(address) as OrderBookStateBuilder;
  }
  connect(signer: Signer): OrderBookStateBuilder__factory {
    return super.connect(signer) as OrderBookStateBuilder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderBookStateBuilderInterface {
    return new utils.Interface(_abi) as OrderBookStateBuilderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderBookStateBuilder {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OrderBookStateBuilder;
  }
}
