/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Pull, ERC20PullInterface } from "../ERC20Pull";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "ERC20PullInitialize",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "pullERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610530806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b7a3c82814610030575b600080fd5b61004361003e366004610426565b610045565b005b6000546001546100709173ffffffffffffffffffffffffffffffffffffffff91821691163084610073565b50565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905261010890859061010e565b50505050565b6000610170826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166102249092919063ffffffff16565b80519091501561021f578080602001905181019061018e919061043f565b61021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b505050565b6060610233848460008561023d565b90505b9392505050565b6060824710156102cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610216565b73ffffffffffffffffffffffffffffffffffffffff85163b61034d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610216565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610376919061048d565b60006040518083038185875af1925050503d80600081146103b3576040519150601f19603f3d011682016040523d82523d6000602084013e6103b8565b606091505b50915091506103c88282866103d3565b979650505050505050565b606083156103e2575081610236565b8251156103f25782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021691906104a9565b60006020828403121561043857600080fd5b5035919050565b60006020828403121561045157600080fd5b8151801515811461023657600080fd5b60005b8381101561047c578181015183820152602001610464565b838111156101085750506000910152565b6000825161049f818460208701610461565b9190910192915050565b60208152600082518060208401526104c8816040850160208701610461565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220fc84a451a48f5bd0ce70646e55347ac1ef9eccd69e0a86e67d2e94e0ff2848a164736f6c634300080a0033";

type ERC20PullConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20PullConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Pull__factory extends ContractFactory {
  constructor(...args: ERC20PullConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Pull> {
    return super.deploy(overrides || {}) as Promise<ERC20Pull>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20Pull {
    return super.attach(address) as ERC20Pull;
  }
  connect(signer: Signer): ERC20Pull__factory {
    return super.connect(signer) as ERC20Pull__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20PullInterface {
    return new utils.Interface(_abi) as ERC20PullInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Pull {
    return new Contract(address, _abi, signerOrProvider) as ERC20Pull;
  }
}
