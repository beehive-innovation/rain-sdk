/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface TrustEscrowWrapperInterface extends utils.Interface {
  functions: {
    "fetchCrp(address)": FunctionFragment;
    "fetchEscrowStatus(address)": FunctionFragment;
    "fetchReserve(address)": FunctionFragment;
    "fetchToken(address)": FunctionFragment;
    "getCrp(address)": FunctionFragment;
    "getEscrowStatus(address)": FunctionFragment;
    "getReserve(address)": FunctionFragment;
    "getToken(address)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "fetchCrp", values: [string]): string;
  encodeFunctionData(
    functionFragment: "fetchEscrowStatus",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "fetchReserve",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "fetchToken", values: [string]): string;
  encodeFunctionData(functionFragment: "getCrp", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getEscrowStatus",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "getReserve", values: [string]): string;
  encodeFunctionData(functionFragment: "getToken", values: [string]): string;

  decodeFunctionResult(functionFragment: "fetchCrp", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "fetchEscrowStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fetchReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "fetchToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getCrp", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getEscrowStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getReserve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getToken", data: BytesLike): Result;

  events: {};
}

export interface TrustEscrowWrapper extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TrustEscrowWrapperInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    fetchCrp(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    fetchEscrowStatus(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    fetchReserve(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    fetchToken(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getCrp(trust_: string, overrides?: CallOverrides): Promise<[string]>;

    getEscrowStatus(
      trust_: string,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getReserve(trust_: string, overrides?: CallOverrides): Promise<[string]>;

    getToken(trust_: string, overrides?: CallOverrides): Promise<[string]>;
  };

  fetchCrp(
    trust_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  fetchEscrowStatus(
    trust_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  fetchReserve(
    trust_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  fetchToken(
    trust_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getCrp(trust_: string, overrides?: CallOverrides): Promise<string>;

  getEscrowStatus(trust_: string, overrides?: CallOverrides): Promise<number>;

  getReserve(trust_: string, overrides?: CallOverrides): Promise<string>;

  getToken(trust_: string, overrides?: CallOverrides): Promise<string>;

  callStatic: {
    fetchCrp(trust_: string, overrides?: CallOverrides): Promise<void>;

    fetchEscrowStatus(trust_: string, overrides?: CallOverrides): Promise<void>;

    fetchReserve(trust_: string, overrides?: CallOverrides): Promise<void>;

    fetchToken(trust_: string, overrides?: CallOverrides): Promise<void>;

    getCrp(trust_: string, overrides?: CallOverrides): Promise<string>;

    getEscrowStatus(trust_: string, overrides?: CallOverrides): Promise<number>;

    getReserve(trust_: string, overrides?: CallOverrides): Promise<string>;

    getToken(trust_: string, overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    fetchCrp(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    fetchEscrowStatus(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    fetchReserve(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    fetchToken(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getCrp(trust_: string, overrides?: CallOverrides): Promise<BigNumber>;

    getEscrowStatus(
      trust_: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserve(trust_: string, overrides?: CallOverrides): Promise<BigNumber>;

    getToken(trust_: string, overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    fetchCrp(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    fetchEscrowStatus(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    fetchReserve(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    fetchToken(
      trust_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getCrp(
      trust_: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEscrowStatus(
      trust_: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserve(
      trust_: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getToken(
      trust_: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
