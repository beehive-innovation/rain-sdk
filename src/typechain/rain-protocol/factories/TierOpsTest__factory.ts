/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TierOpsTest,
  TierOpsTestInterface,
  StateConfigStruct,
} from "../TierOpsTest";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "stackLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "argumentsLength",
            type: "uint256",
          },
        ],
        internalType: "struct StateConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    inputs: [],
    name: "run",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "runLength",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "runState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        internalType: "struct State",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001e9738038062001e978339810160408190526200003491620003bd565b60046080526200004e620000488262000061565b6200015b565b6001600160a01b031660a0525062000719565b620000946040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b6040518060a001604052806000815260200183604001516001600160401b03811115620000c557620000c56200027d565b604051908082528060200260200182016040528015620000ef578160200160208202803683370190505b508152602001836000015181526020018360200151815260200183606001516001600160401b038111156200012857620001286200027d565b60405190808252806020026020018201604052801562000152578160200160208202803683370190505b50905292915050565b600080620001958360405160200162000175919062000654565b604051602081830303815290604052620001da60201b620002251760201c565b90507ff95eed63f55d96a35306669cc3b5f652f8d44552e3e4b17b2f78f13571114abd338285604051620001cc9392919062000670565b60405180910390a192915050565b6000806200021483604051602001620001f491906200069e565b6040516020818303038152906040526200024f60201b620002b01760201c565b90508051602082016000f091506001600160a01b038216620002495760405163046a55db60e11b815260040160405180910390fd5b50919050565b606081518260405160200162000267929190620006c6565b6040516020818303038152906040529050919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715620002b857620002b86200027d565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620002e957620002e96200027d565b604052919050565b60006001600160401b038211156200030d576200030d6200027d565b5060051b60200190565b60005b83811015620003345781810151838201526020016200031a565b8381111562000344576000848401525b50505050565b600082601f8301126200035c57600080fd5b81516020620003756200036f83620002f1565b620002be565b82815260059290921b840181019181810190868411156200039557600080fd5b8286015b84811015620003b2578051835291830191830162000399565b509695505050505050565b60006020808385031215620003d157600080fd5b82516001600160401b0380821115620003e957600080fd5b9084019060808287031215620003fe57600080fd5b6200040862000293565b8251828111156200041857600080fd5b8301601f810188136200042a57600080fd5b80516200043b6200036f82620002f1565b81815260059190911b8201860190868101908a8311156200045b57600080fd5b8784015b83811015620004f157805187811115620004795760008081fd5b8501603f81018d136200048c5760008081fd5b89810151604089821115620004a557620004a56200027d565b620004b9601f8301601f19168d01620002be565b8281528f82848601011115620004cf5760008081fd5b620004e0838e830184870162000317565b86525050509188019188016200045f565b50845250505082840151828111156200050957600080fd5b62000517888286016200034a565b858301525060408301516040820152606083015160608201528094505050505092915050565b600081518084526020808501945080840160005b838110156200056f5781518752958201959082019060010162000551565b509495945050505050565b80518252600060208083015160a0828601526200059b60a08601826200053d565b9050604084015185820360408701528181518084528484019150848160051b850101858401935060005b828110156200060f57601f198087840301855285518051808552620005f0818b87018c850162000317565b9689019695890195601f019091169290920187019150600101620005c5565b506060880151955088810360608a01526200062b81876200053d565b95505050505050608083015184820360808601526200064b82826200053d565b95945050505050565b6020815260006200066960208301846200057a565b9392505050565b6001600160a01b038481168252831660208201526060604082018190526000906200064b908301846200057a565b6000815260008251620006b981600185016020870162000317565b9190910160010192915050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b600582015281516000906200070b81600e85016020870162000317565b91909101600e019392505050565b60805160a0516117596200073e600039600060d30152600061066001526117596000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806345c6a7a6146100465780635ab47a0114610064578063c040622614610084575b600080fd5b61004e61009a565b60405161005b9190611114565b60405180910390f35b61007761007236600461120f565b610119565b60405161005b9190611228565b61008c6101e4565b60405190815260200161005b565b6100cc6040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b60006100f77f00000000000000000000000000000000000000000000000000000000000000006102dc565b905061011460405180602001604052806000815250826000610330565b919050565b6060600061012561009a565b905060008367ffffffffffffffff8111156101425761014261126c565b60405190808252806020026020018201604052801561016b578160200160208202803683370190505b50905060005b848110156101dc5760208301518351829061018d9088906112ca565b61019791906112e1565b815181106101a7576101a76112f9565b60200260200101518282815181106101c1576101c16112f9565b60209081029190910101526101d581611328565b9050610171565b509392505050565b6000806101ef61009a565b905080602001516001826000015161020791906112ca565b81518110610217576102176112f9565b602002602001015191505090565b6000806102508360405160200161023c9190611361565b6040516020818303038152906040526102b0565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff82166102aa576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b60608151826040516020016102c6929190611387565b6040516020818303038152906040529050919050565b61030e6040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b610317826104c5565b80602001905181019061032a9190611627565b92915050565b602082810151604084015183830201909101516060840151608085015182516000948594859492939092915b848810156104b8576002880197508784015180601e1a975080601f1a96505060048710156104ac5760018714156103bf5781608087166103995750825b8a516020607f89160260200182015160208202602001840152600181018c52505061035c565b60028714156103ea5789516020870260200182015160208202602001830152600181018b525061035c565b6003871415610403576103fe8b8b886104f3565b61035c565b607f6101fe600188901b16178616608087161561046f578a517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808c5260208c015180519091908110610459576104596112f9565b60200260200101516000141561046f575061035c565b8060000b6000146104a65760008160000b121561049a57801960020160020260ff16890398506104a6565b8060020260ff16890198505b5061035c565b6103fe8b8b8989610659565b5050505050505050505050565b606061032a8260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61068d565b81517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600583901c918290030183526007821690610100600384811c1681901c91908290039060010160008167ffffffffffffffff8111156105575761055761126c565b604051908082528060200260200182016040528015610580578160200160208202803683370190505b50905060005b828110156105d757876020015181896000015101815181106105aa576105aa6112f9565b60200260200101518282815181106105c4576105c46112f9565b6020908102919091010152600101610586565b5060005b61010081101561064e5760005b8381101561063b5784828603848381518110610606576106066112f9565b6020026020010151901b901c89608001518281518110610628576106286112f9565b60209081029190910101526001016105e8565b50610647898988610330565b84016105db565b505050505050505050565b61068784847f000000000000000000000000000000000000000000000000000000000000000085038461077b565b50505050565b6060833b806106ac575050604080516020810190915260008152610774565b808411156106ca575050604080516020810190915260008152610774565b8383101561071a576040517f2c4a89fa0000000000000000000000000000000000000000000000000000000081526004810182905260248101859052604481018490526064015b60405180910390fd5b838303848203600082821061072f5782610731565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050505b9392505050565b600682106107e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4d41585f4f50434f4445000000000000000000000000000000000000000000006044820152606401610711565b600082610934575082517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018452602084015180517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9092019182908110610850576108506112f9565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663e053ea318560200151836001018151811061088c5761088c6112f9565b60200260200101516040518263ffffffff1660e01b81526004016108cc919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b602060405180830381865afa1580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090d919061170a565b84602001518281518110610923576109236112f9565b602002602001018181525050610c71565b600183141561098f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8460200151856000015181518110610978576109786112f9565b602090810291909101015283516001018452610c71565b60028314156109b45760008460200151856000015181518110610978576109786112f9565b6003831415610a68575082517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01808452602084015180516000919083908110610a0057610a006112f9565b60200260200101519050600085602001518360010181518110610a2557610a256112f9565b60200260200101519050610a398282610c78565b86602001518481518110610a4f57610a4f6112f9565b6020908102919091010152505083516001018452610c71565b6004831415610b30575082517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0180845260208401518051600f80851692600486901c909116916000919085908110610ac357610ac36112f9565b60200260200101519050600087602001518560010181518110610ae857610ae86112f9565b60200260200101519050610afe82858584610ccf565b88602001518681518110610b1457610b146112f9565b602090810291909101015250508551600101865250610c719050565b6005831415610c71575082517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff601f8316918290030180855290600783901c906003600585901c16908360008267ffffffffffffffff811115610b9557610b9561126c565b604051908082528060200260200182016040528015610bbe578160200160208202803683370190505b50905060005b83811015610c135789602001518381518110610be257610be26112f9565b6020026020010151828281518110610bfc57610bfc6112f9565b602090810291909101015260019283019201610bc4565b50600089602001518381518110610c2c57610c2c6112f9565b60200260200101519050610c4282828888610de2565b8a602001518881518110610c5857610c586112f9565b6020908102919091010152505087516001018852505050505b5050505050565b60008060015b600881116101dc576000610c928683610f32565b90506000610ca08684610f32565b90506000610cae8383610fe7565b9050610cbe856001860383610ffd565b94505060019092019150610c7e9050565b6000836008811115610d3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610711565b836008811115610da9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610711565b6000865b86811015610dd55763ffffffff6020820290811b1999909916868a1b17989150600101610dad565b5096979650505050505050565b835160009081908190819060015b60088111610f2457600092508287610e2957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610e2d565b5060005b60005b83811015610ee257610e5b8c8281518110610e4d57610e4d6112f9565b602002602001015184610f32565b95508a8611610ead5788610e7a57610e738683611087565b9150610ea4565b6001891415610e8d57610e73868361109d565b600289148015610e9b575084155b15610ea4578591505b60019450610eda565b89610eda577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9150610ee2565b600101610e30565b5083610f0b57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b610f19866001840383610ffd565b955050600101610df0565b509298975050505050505050565b6000816008811115610fa0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610711565b82610fae5760009150610fe0565b63ffffffff60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85010285901c1691505b5092915050565b6000818311610ff7576000610774565b50900390565b600082600881111561106b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610711565b505060209190910290811b63ffffffff90911b19919091161790565b60008183106110965781610774565b5090919050565b6000818310156110965781610774565b600081518084526020808501945080840160005b838110156110dd578151875295820195908201906001016110c1565b509495945050505050565b60005b838110156111035781810151838201526020016110eb565b838111156106875750506000910152565b600060208083528351818401528084015160a0604085015261113960c08501826110ad565b905060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808684030160608701528282518085528585019150858160051b860101868501945060005b828110156111c85784878303018452855180518084526111ab818b86018c85016110e8565b9689019694890194601f0186169290920188019150600101611186565b5060608a01519650838982030160808a01526111e481886110ad565b965050505060808701519250808685030160a0870152505061120682826110ad565b95945050505050565b60006020828403121561122157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561126057835183529284019291840191600101611244565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156112dc576112dc61129b565b500390565b600082198211156112f4576112f461129b565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561135a5761135a61129b565b5060010190565b600081526000825161137a8160018501602087016110e8565b9190910160010192915050565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f3000000000000000000000000000000000000000000000060058201526000825161141081600e8501602087016110e8565b91909101600e019392505050565b60405160a0810167ffffffffffffffff811182821017156114415761144161126c565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561148e5761148e61126c565b604052919050565b600067ffffffffffffffff8211156114b0576114b061126c565b5060051b60200190565b600082601f8301126114cb57600080fd5b815160206114e06114db83611496565b611447565b82815260059290921b840181019181810190868411156114ff57600080fd5b8286015b8481101561151a5780518352918301918301611503565b509695505050505050565b6000601f838184011261153757600080fd5b825160206115476114db83611496565b82815260059290921b8501810191818101908784111561156657600080fd5b8287015b8481101561161b57805167ffffffffffffffff8082111561158b5760008081fd5b818a0191508a603f8301126115a05760008081fd5b858201516040828211156115b6576115b661126c565b6115e5887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c85011601611447565b92508183528c818386010111156115fc5760008081fd5b61160b828985018387016110e8565b505084525091830191830161156a565b50979650505050505050565b60006020828403121561163957600080fd5b815167ffffffffffffffff8082111561165157600080fd5b9083019060a0828603121561166557600080fd5b61166d61141e565b8251815260208301518281111561168357600080fd5b61168f878286016114ba565b6020830152506040830151828111156116a757600080fd5b6116b387828601611525565b6040830152506060830151828111156116cb57600080fd5b6116d7878286016114ba565b6060830152506080830151828111156116ef57600080fd5b6116fb878286016114ba565b60808301525095945050505050565b60006020828403121561171c57600080fd5b505191905056fea2646970667358221220a01e9a3f22f0062d1b7bafeea18acdd1441eabdce3ec08eab164fd56cacb677a64736f6c634300080a0033";

type TierOpsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TierOpsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TierOpsTest__factory extends ContractFactory {
  constructor(...args: TierOpsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TierOpsTest> {
    return super.deploy(config_, overrides || {}) as Promise<TierOpsTest>;
  }
  getDeployTransaction(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(config_, overrides || {});
  }
  attach(address: string): TierOpsTest {
    return super.attach(address) as TierOpsTest;
  }
  connect(signer: Signer): TierOpsTest__factory {
    return super.connect(signer) as TierOpsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TierOpsTestInterface {
    return new utils.Interface(_abi) as TierOpsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TierOpsTest {
    return new Contract(address, _abi, signerOrProvider) as TierOpsTest;
  }
}
