/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TierReportTest,
  TierReportTestInterface,
} from "../TierReportTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "report_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber_",
        type: "uint256",
      },
    ],
    name: "tierAtBlockFromReport",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "report_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tier_",
        type: "uint256",
      },
    ],
    name: "tierBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "report_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tier_",
        type: "uint256",
      },
    ],
    name: "truncateTiersAbove",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "report_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tier_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber_",
        type: "uint256",
      },
    ],
    name: "updateBlockAtTier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "report_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTier_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTier_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber_",
        type: "uint256",
      },
    ],
    name: "updateBlocksForTierRange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "report_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTier_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTier_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber_",
        type: "uint256",
      },
    ],
    name: "updateReportWithTierAtBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610569806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063963070081161005057806396307008146100c2578063c7a0977d146100d5578063f4fa0fc9146100e857600080fd5b80636ed9558d14610077578063787752041461009c5780637ba1c78e146100af575b600080fd5b61008a6100853660046104b3565b6100fb565b60405190815260200160405180910390f35b61008a6100aa3660046104b3565b610110565b61008a6100bd3660046104d5565b61011c565b61008a6100d0366004610507565b610133565b61008a6100e33660046104d5565b610148565b61008a6100f63660046104b3565b610156565b60006101078383610162565b90505b92915050565b6000610107838361019c565b600061012a85858585610245565b95945050505050565b6000610140848484610269565b949350505050565b600061012a858585856102f3565b60006101078383610406565b6000805b600881101561019257828160200285901c63ffffffff16111561018a57905061010a565b600101610166565b5060089392505050565b600081600881111561020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f5449455200000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6020840290811c901b841791505b5092915050565b600083831061025f5761025a858585856102f3565b61012a565b61012a858461019c565b60008260088111156102d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610206565b505060209190910290811b63ffffffff90911b19919091161790565b6000836008811115610361576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610206565b8360088111156103cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610206565b6000865b868110156103f95763ffffffff6020820290811b1999909916868a1b179891506001016103d1565b5096979650505050505050565b6000816008811115610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610206565b82610482576000915061023e565b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016020021c63ffffffff1690565b600080604083850312156104c657600080fd5b50508035926020909101359150565b600080600080608085870312156104eb57600080fd5b5050823594602084013594506040840135936060013592509050565b60008060006060848603121561051c57600080fd5b50508135936020830135935060409092013591905056fea26469706673582212205848170fb972f24e54a1a27a5904a4fd3fc0f399eeded6ce1e3857ffa6c9b31c64736f6c634300080a0033";

type TierReportTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TierReportTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TierReportTest__factory extends ContractFactory {
  constructor(...args: TierReportTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TierReportTest> {
    return super.deploy(overrides || {}) as Promise<TierReportTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TierReportTest {
    return super.attach(address) as TierReportTest;
  }
  connect(signer: Signer): TierReportTest__factory {
    return super.connect(signer) as TierReportTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TierReportTestInterface {
    return new utils.Interface(_abi) as TierReportTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TierReportTest {
    return new Contract(address, _abi, signerOrProvider) as TierReportTest;
  }
}
