/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenOpsTest,
  TokenOpsTestInterface,
  StateConfigStruct,
} from "../TokenOpsTest";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "stackLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "argumentsLength",
            type: "uint256",
          },
        ],
        internalType: "struct StateConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    inputs: [],
    name: "run",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "runLength",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "runState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        internalType: "struct State",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001ff438038062001ff48339810160408190526200003591620003e4565b600460808190526200004a9060029062000564565b60a08190526200005d9060029062000564565b60c052620000756200006f8262000088565b62000182565b6001600160a01b031660e0525062000767565b620000bb6040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b6040518060a001604052806000815260200183604001516001600160401b03811115620000ec57620000ec620002a4565b60405190808252806020026020018201604052801562000116578160200160208202803683370190505b508152602001836000015181526020018360200151815260200183606001516001600160401b038111156200014f576200014f620002a4565b60405190808252806020026020018201604052801562000179578160200160208202803683370190505b50905292915050565b600080620001bc836040516020016200019c9190620006a2565b6040516020818303038152906040526200020160201b620002251760201c565b90507ff95eed63f55d96a35306669cc3b5f652f8d44552e3e4b17b2f78f13571114abd338285604051620001f393929190620006be565b60405180910390a192915050565b6000806200023b836040516020016200021b9190620006ec565b6040516020818303038152906040526200027660201b620002b01760201c565b90508051602082016000f091506001600160a01b038216620002705760405163046a55db60e11b815260040160405180910390fd5b50919050565b60608151826040516020016200028e92919062000714565b6040516020818303038152906040529050919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715620002df57620002df620002a4565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003105762000310620002a4565b604052919050565b60006001600160401b03821115620003345762000334620002a4565b5060051b60200190565b60005b838110156200035b57818101518382015260200162000341565b838111156200036b576000848401525b50505050565b600082601f8301126200038357600080fd5b815160206200039c620003968362000318565b620002e5565b82815260059290921b84018101918181019086841115620003bc57600080fd5b8286015b84811015620003d95780518352918301918301620003c0565b509695505050505050565b60006020808385031215620003f857600080fd5b82516001600160401b03808211156200041057600080fd5b90840190608082870312156200042557600080fd5b6200042f620002ba565b8251828111156200043f57600080fd5b8301601f810188136200045157600080fd5b805162000462620003968262000318565b81815260059190911b8201860190868101908a8311156200048257600080fd5b8784015b838110156200051857805187811115620004a05760008081fd5b8501603f81018d13620004b35760008081fd5b89810151604089821115620004cc57620004cc620002a4565b620004e0601f8301601f19168d01620002e5565b8281528f82848601011115620004f65760008081fd5b62000507838e83018487016200033e565b865250505091880191880162000486565b50845250505082840151828111156200053057600080fd5b6200053e8882860162000371565b858301525060408301516040820152606083015160608201528094505050505092915050565b600082198211156200058657634e487b7160e01b600052601160045260246000fd5b500190565b600081518084526020808501945080840160005b83811015620005bd578151875295820195908201906001016200059f565b509495945050505050565b80518252600060208083015160a082860152620005e960a08601826200058b565b9050604084015185820360408701528181518084528484019150848160051b850101858401935060005b828110156200065d57601f1980878403018552855180518085526200063e818b87018c85016200033e565b9689019695890195601f01909116929092018701915060010162000613565b506060880151955088810360608a01526200067981876200058b565b95505050505050608083015184820360808601526200069982826200058b565b95945050505050565b602081526000620006b76020830184620005c8565b9392505050565b6001600160a01b038481168252831660208201526060604082018190526000906200069990830184620005c8565b6000815260008251620007078160018501602087016200033e565b9190910160010192915050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b600582015281516000906200075981600e8501602087016200033e565b91909101600e019392505050565b60805160a05160c05160e051611846620007ae600039600060d30152600081816106b6015261071101526000818161065b01526106e30152600061068801526118466000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806345c6a7a6146100465780635ab47a0114610064578063c040622614610084575b600080fd5b61004e61009a565b60405161005b9190611152565b60405180910390f35b61007761007236600461124d565b610119565b60405161005b9190611266565b61008c6101e4565b60405190815260200161005b565b6100cc6040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b60006100f77f00000000000000000000000000000000000000000000000000000000000000006102dc565b905061011460405180602001604052806000815250826000610330565b919050565b6060600061012561009a565b905060008367ffffffffffffffff81111561014257610142611279565b60405190808252806020026020018201604052801561016b578160200160208202803683370190505b50905060005b848110156101dc5760208301518351829061018d9088906112d7565b61019791906112ee565b815181106101a7576101a7611306565b60200260200101518282815181106101c1576101c1611306565b60209081029190910101526101d581611335565b9050610171565b509392505050565b6000806101ef61009a565b905080602001516001826000015161020791906112d7565b8151811061021757610217611306565b602002602001015191505090565b6000806102508360405160200161023c919061136e565b6040516020818303038152906040526102b0565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff82166102aa576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b60608151826040516020016102c6929190611394565b6040516020818303038152906040529050919050565b61030e6040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b610317826104c5565b80602001905181019061032a9190611634565b92915050565b602082810151604084015183830201909101516060840151608085015182516000948594859492939092915b848810156104b8576002880197508784015180601e1a975080601f1a96505060048710156104ac5760018714156103bf5781608087166103995750825b8a516020607f89160260200182015160208202602001840152600181018c52505061035c565b60028714156103ea5789516020870260200182015160208202602001830152600181018b525061035c565b6003871415610403576103fe8b8b886104f3565b61035c565b607f6101fe600188901b16178616608087161561046f578a517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808c5260208c01518051909190811061045957610459611306565b60200260200101516000141561046f575061035c565b8060000b6000146104a65760008160000b121561049a57801960020160020260ff16890398506104a6565b8060020260ff16890198505b5061035c565b6103fe8b8b8989610659565b5050505050505050505050565b606061032a8260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61073e565b81517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600583901c918290030183526007821690610100600384811c1681901c91908290039060010160008167ffffffffffffffff81111561055757610557611279565b604051908082528060200260200182016040528015610580578160200160208202803683370190505b50905060005b828110156105d757876020015181896000015101815181106105aa576105aa611306565b60200260200101518282815181106105c4576105c4611306565b6020908102919091010152600101610586565b5060005b61010081101561064e5760005b8381101561063b578482860384838151811061060657610606611306565b6020026020010151901b901c8960800151828151811061062857610628611306565b60209081029190910101526001016105e8565b50610647898988610330565b84016105db565b505050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000008210156106b4576106af84847f000000000000000000000000000000000000000000000000000000000000000085038461082c565b610738565b7f000000000000000000000000000000000000000000000000000000000000000082101561070a576106af84847f0000000000000000000000000000000000000000000000000000000000000000850384610ab3565b61073884847f0000000000000000000000000000000000000000000000000000000000000000850384610c62565b50505050565b6060833b8061075d575050604080516020810190915260008152610825565b8084111561077b575050604080516020810190915260008152610825565b838310156107cb576040517f2c4a89fa0000000000000000000000000000000000000000000000000000000081526004810182905260248101859052604481018490526064015b60405180910390fd5b83830384820360008282106107e057826107e2565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050505b9392505050565b60028210610896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4d41585f4f50434f44450000000000000000000000000000000000000000000060448201526064016107c2565b816109e85782517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810184526020840151805190917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe019081106108fc576108fc611306565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231846020015185600001518151811061093957610939611306565b60200260200101516040518263ffffffff1660e01b8152600401610979919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b602060405180830381865afa158015610996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ba9190611717565b83602001516001856000015103815181106109d7576109d7611306565b602002602001018181525050610738565b6001821415610738578260200151600184600001510381518110610a0e57610a0e611306565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a849190611717565b8360200151600185600001510381518110610aa157610aa1611306565b60200260200101818152505050505050565b60028210610b1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4d41585f4f50434f44450000000000000000000000000000000000000000000060448201526064016107c2565b82517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01835281610b655782602001516001846000015103815181106108fc576108fc611306565b6001821415610738578260200151600184600001510381518110610b8b57610b8b611306565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16636352211e8460200151856000015181518110610bc857610bc8611306565b60200260200101516040518263ffffffff1660e01b8152600401610bee91815260200190565b602060405180830381865afa158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f9190611730565b73ffffffffffffffffffffffffffffffffffffffff168360200151600185600001510381518110610aa157610aa1611306565b60028210610ccc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4d41585f4f50434f44450000000000000000000000000000000000000000000060448201526064016107c2565b81610e3f5782517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81018452602084015180517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd9092019182908110610d3457610d34611306565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1662fdd58e85602001518360010181518110610d6f57610d6f611306565b602002602001015186602001518460020181518110610d9057610d90611306565b60200260200101516040518363ffffffff1660e01b8152600401610dd692919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b602060405180830381865afa158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e179190611717565b84602001518281518110610e2d57610e2d611306565b60200260200101818152505050610738565b6001821415610738576001810160008167ffffffffffffffff811115610e6757610e67611279565b604051908082528060200260200182016040528015610e90578160200160208202803683370190505b50905060008267ffffffffffffffff811115610eae57610eae611279565b604051908082528060200260200182016040528015610ed7578160200160208202803683370190505b5086518490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8181018952602089015180519394509186900301916000919083908110610f2757610f27611306565b6020026020010151905060005b85811015610fde57886020015181840160010181518110610f5757610f57611306565b6020026020010151858281518110610f7157610f71611306565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910182015289015180516001858901840101908110610fb157610fb1611306565b6020026020010151848281518110610fcb57610fcb611306565b6020908102919091010152600101610f34565b506040517f4e1273f400000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff831690634e1273f4906110369088908890600401611766565b600060405180830381865afa158015611053573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261109991908101906117d3565b905060005b868110156104b8578181815181106110b8576110b8611306565b60200260200101518a60200151828601815181106110d8576110d8611306565b602090810291909101015260010161109e565b600081518084526020808501945080840160005b8381101561111b578151875295820195908201906001016110ff565b509495945050505050565b60005b83811015611141578181015183820152602001611129565b838111156107385750506000910152565b600060208083528351818401528084015160a0604085015261117760c08501826110eb565b905060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808684030160608701528282518085528585019150858160051b860101868501945060005b828110156112065784878303018452855180518084526111e9818b86018c8501611126565b9689019694890194601f01861692909201880191506001016111c4565b5060608a01519650838982030160808a015261122281886110eb565b965050505060808701519250808685030160a0870152505061124482826110eb565b95945050505050565b60006020828403121561125f57600080fd5b5035919050565b60208152600061082560208301846110eb565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156112e9576112e96112a8565b500390565b60008219821115611301576113016112a8565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611367576113676112a8565b5060010190565b6000815260008251611387816001850160208701611126565b9190910160010192915050565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f3000000000000000000000000000000000000000000000060058201526000825161141d81600e850160208701611126565b91909101600e019392505050565b60405160a0810167ffffffffffffffff8111828210171561144e5761144e611279565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561149b5761149b611279565b604052919050565b600067ffffffffffffffff8211156114bd576114bd611279565b5060051b60200190565b600082601f8301126114d857600080fd5b815160206114ed6114e8836114a3565b611454565b82815260059290921b8401810191818101908684111561150c57600080fd5b8286015b848110156115275780518352918301918301611510565b509695505050505050565b6000601f838184011261154457600080fd5b825160206115546114e8836114a3565b82815260059290921b8501810191818101908784111561157357600080fd5b8287015b8481101561162857805167ffffffffffffffff808211156115985760008081fd5b818a0191508a603f8301126115ad5760008081fd5b858201516040828211156115c3576115c3611279565b6115f2887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c85011601611454565b92508183528c818386010111156116095760008081fd5b61161882898501838701611126565b5050845250918301918301611577565b50979650505050505050565b60006020828403121561164657600080fd5b815167ffffffffffffffff8082111561165e57600080fd5b9083019060a0828603121561167257600080fd5b61167a61142b565b8251815260208301518281111561169057600080fd5b61169c878286016114c7565b6020830152506040830151828111156116b457600080fd5b6116c087828601611532565b6040830152506060830151828111156116d857600080fd5b6116e4878286016114c7565b6060830152506080830151828111156116fc57600080fd5b611708878286016114c7565b60808301525095945050505050565b60006020828403121561172957600080fd5b5051919050565b60006020828403121561174257600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461082557600080fd5b604080825283519082018190526000906020906060840190828701845b828110156117b557815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101611783565b505050838103828501526117c981866110eb565b9695505050505050565b6000602082840312156117e557600080fd5b815167ffffffffffffffff8111156117fc57600080fd5b611808848285016114c7565b94935050505056fea2646970667358221220644961820cf8a1e14fdf0bcae9f06f6f95bef47f8b11a7207fc3820b0548f3a864736f6c634300080a0033";

type TokenOpsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenOpsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenOpsTest__factory extends ContractFactory {
  constructor(...args: TokenOpsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenOpsTest> {
    return super.deploy(config_, overrides || {}) as Promise<TokenOpsTest>;
  }
  getDeployTransaction(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(config_, overrides || {});
  }
  attach(address: string): TokenOpsTest {
    return super.attach(address) as TokenOpsTest;
  }
  connect(signer: Signer): TokenOpsTest__factory {
    return super.connect(signer) as TokenOpsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenOpsTestInterface {
    return new utils.Interface(_abi) as TokenOpsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenOpsTest {
    return new Contract(address, _abi, signerOrProvider) as TokenOpsTest;
  }
}
